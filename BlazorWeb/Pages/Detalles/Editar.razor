@page "/detalles/editar/{id:int}"
@using BlazorWeb.Data
@using Modelo.Entidades
@inject DetalleService Dservice
@inject RecursoService Rservice
@inject TareaService Tservice
@inject NavigationManager navigation

<EditForm Model="@Modelo" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form row">
        <div class="form-group col-md-12">
            <InputDate @bind-Value="Modelo.Fecha" />
        </div>
        <div class="form-group col-md-12">
            <InputNumber class="form-control" placeholder="Estimación" @bind-Value="Modelo.Tiempo" />
        </div>
        <div class="form-group col-md-12">
            <InputSelect class="form-control" @bind-Value="RecursoId">
                <option value="0">Elija un recurso</option>
                @if (recursos != null) // Por alguna razón si no hago esta verificación, se ejecuta el foreach antes de que se complete el GetAll()
                {
                    foreach (var recurso in recursos)
                    {
                        <option value="@recurso.Id">@recurso.Nombre</option>
                    }
                }
            </InputSelect>
        </div>
        <div class="form-group col-md-12">
            <InputSelect class="form-control" @bind-Value="TareaId">
                <option value="0">Elija una tarea</option>
                @if (tareas != null) // Por alguna razón si no hago esta verificación, se ejecuta el foreach antes de que se complete el GetAll()
                {
                    foreach (var tareas in tareas)
                    {
                        <option value="@tareas.Id">@tareas.Titulo</option>
                    }
                }
            </InputSelect>
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
</EditForm>
@code {
    [Parameter]
    public int Id { get; set; }
    public string RecursoId { get; set; }
    public string TareaId { get; set; }
    public Detalle Modelo { get; set; } = new Detalle();
    private List<Recurso> recursos;
    private List<Tarea> tareas;

    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            Modelo = await Dservice.Get(Id);
            RecursoId = Modelo.RecursoId.ToString();
            TareaId = Modelo.TareaId.ToString();
        }
        else
        {
            Modelo = new Detalle();
        }
        recursos = await Rservice.GetAll();
        tareas = await Tservice.GetAll();
    }

    private async void Guardar()
    {
        Modelo.RecursoId = int.Parse(RecursoId);
        Modelo.TareaId = int.Parse(TareaId);
        await Dservice.Save(Modelo);
        navigation.NavigateTo("detalles/listado");
    }
}